/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vues;

import Controlers.CtrlCategorie;
import Controlers.CtrlLecon;
import Controlers.CtrlMoniteur;
import Controlers.CtrlVehicule;
import Entities.Categorie;
import Entities.Moniteur;
import Entities.Vehicule;
import Entities.Eleve;
import Tools.ConnexionBDD;
import Tools.ModelJTable;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;

/**
 *
 * @author ninou
 */
public class FrmEleveInscriptionLecon extends javax.swing.JFrame {

    /**
     * Creates new form FrmEleveInscriptionLecon
     */
    ConnexionBDD cnx;
    CtrlVehicule ctrlVehicule;
    CtrlCategorie ctrlCategorie;
    CtrlMoniteur ctrlMoniteur;
    CtrlLecon ctrlLecon;
    static Eleve eleve;
    
    ModelJTable mdl;
    public FrmEleveInscriptionLecon() {
        initComponents();
    }
    public FrmEleveInscriptionLecon(Eleve unEleve) {
        initComponents();
        eleve=unEleve;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLEleveLeconTitre = new javax.swing.JLabel();
        lblLEleveLeconDate = new javax.swing.JLabel();
        lblLEleveLeconHeure = new javax.swing.JLabel();
        lblLEleveLeconTypePermis = new javax.swing.JLabel();
        lblLEleveLeconMoniteur = new javax.swing.JLabel();
        lblLEleveLeconVehicule = new javax.swing.JLabel();
        dcEleveInscriptionLeconDate = new com.toedter.calendar.JDateChooser();
        cboEleveInscriptionLeconTypePermis = new javax.swing.JComboBox<>();
        cboEleveInscriptionLeconMoniteur = new javax.swing.JComboBox<>();
        cboEleveInscriptionLeconVehicule = new javax.swing.JComboBox<>();
        btnEleveInscriptionLecon = new javax.swing.JButton();
        spEleveInscriptionLeconHeure = new javax.swing.JSpinner();
        lblLEleveLeconH = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cboPayee = new javax.swing.JComboBox<>();
        lblLEleveLeconMinute = new javax.swing.JLabel();
        spEleveInscriptionLeconMinute = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblLEleveLeconTitre.setText("S'inscrire à une leçon");

        lblLEleveLeconDate.setText("Date :");

        lblLEleveLeconHeure.setText("Heure du RDV :");

        lblLEleveLeconTypePermis.setText("Type de Permis : ");

        lblLEleveLeconMoniteur.setText("Moniteur : ");

        lblLEleveLeconVehicule.setText("Véhicule :");

        cboEleveInscriptionLeconTypePermis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEleveInscriptionLeconTypePermisActionPerformed(evt);
            }
        });

        btnEleveInscriptionLecon.setText("S'inscrire");
        btnEleveInscriptionLecon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEleveInscriptionLeconMouseClicked(evt);
            }
        });

        spEleveInscriptionLeconHeure.setModel(new javax.swing.SpinnerNumberModel(8, 1, 20, 1));

        jLabel1.setText("Payer ? ");

        cboPayee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Non", "Oui" }));

        lblLEleveLeconMinute.setText("Minutes du RDV:");

        spEleveInscriptionLeconMinute.setModel(new javax.swing.SpinnerNumberModel(0, 0, 45, 15));
        spEleveInscriptionLeconMinute.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblLEleveLeconTypePermis, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                            .addComponent(lblLEleveLeconVehicule, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblLEleveLeconMoniteur))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLEleveLeconMinute)
                                        .addGap(36, 36, 36)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboEleveInscriptionLeconVehicule, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboEleveInscriptionLeconMoniteur, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboEleveInscriptionLeconTypePermis, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cboPayee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(spEleveInscriptionLeconHeure)
                                            .addComponent(spEleveInscriptionLeconMinute, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblLEleveLeconH, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblLEleveLeconHeure)
                                            .addComponent(lblLEleveLeconDate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnEleveInscriptionLecon))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(71, 71, 71)
                                                .addComponent(dcEleveInscriptionLeconDate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 6, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(lblLEleveLeconTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblLEleveLeconTitre)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLEleveLeconDate)
                    .addComponent(dcEleveInscriptionLeconDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLEleveLeconHeure)
                    .addComponent(spEleveInscriptionLeconHeure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLEleveLeconH))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLEleveLeconMinute)
                    .addComponent(spEleveInscriptionLeconMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLEleveLeconTypePermis)
                    .addComponent(cboEleveInscriptionLeconTypePermis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLEleveLeconMoniteur)
                    .addComponent(cboEleveInscriptionLeconMoniteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLEleveLeconVehicule)
                    .addComponent(cboEleveInscriptionLeconVehicule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboPayee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(btnEleveInscriptionLecon)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        cnx = new ConnexionBDD();
        ctrlMoniteur = new CtrlMoniteur();
        ctrlVehicule= new CtrlVehicule();
        ctrlCategorie= new CtrlCategorie();
        ctrlLecon= new CtrlLecon();
        

        for (Moniteur moniteur : ctrlMoniteur.GetAllMoniteur()){
            cboEleveInscriptionLeconMoniteur.addItem(moniteur.getNom());
        }

        for (Categorie cat : ctrlCategorie.getAllCategorie()){
            cboEleveInscriptionLeconTypePermis.addItem(cat.getLibelle());
        }
        
        
        
        
    }//GEN-LAST:event_formWindowOpened

    private void btnEleveInscriptionLeconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEleveInscriptionLeconMouseClicked
        // TODO add your handling code here:
        if (dcEleveInscriptionLeconDate.getDate() == null){
            JOptionPane.showMessageDialog(null, "Sélectionner une Date","Choix de la date",JOptionPane.WARNING_MESSAGE);
        }
//        else if(Integer.parseInt(sprEleveInscriptionLeconHeure.getValue().toString() )== 0 ){
//            JOptionPane.showMessageDialog(null, "Sélectionner une heure","Choix de l'heure",JOptionPane.WARNING_MESSAGE);
//        }
        else {
            int numEleve = eleve.getNumEleve();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dateLecon = sdf.format(dcEleveInscriptionLeconDate.getDate());
             // On récupère l'heure avec les JSPINNER
                    String heureSaisie = "";//spHeure.getValue() + ":" + spMinute.getValue();
                    String minuteSaisie = "";
                    heureSaisie = spEleveInscriptionLeconHeure.getValue().toString();
                    if(spEleveInscriptionLeconHeure.getValue().toString().length() == 1)
                    {
                        heureSaisie = "0"+ spEleveInscriptionLeconHeure.getValue().toString();
                    }
                    minuteSaisie = spEleveInscriptionLeconMinute.getValue().toString();
                    if(spEleveInscriptionLeconMinute.getValue().toString().length() == 1)
                    {
                        minuteSaisie = spEleveInscriptionLeconMinute.getValue().toString() + "0";
                    }
                    String heureRdv = heureSaisie + ":" + minuteSaisie + ":00";
            
            int reglee= 0;
            if("Oui".equals(cboPayee.getSelectedItem().toString())){
                reglee=1;
            }
            if(ctrlLecon.verifInscripLecon(ctrlMoniteur.getIdMoniteurByName(cboEleveInscriptionLeconMoniteur.getSelectedItem().toString()),eleve.getNumEleve(), dateLecon,ctrlVehicule.getCodeCateByModele(cboEleveInscriptionLeconVehicule.getSelectedItem().toString())) != null){
                 JOptionPane.showMessageDialog(this, "Vous êtes déjà inscrit avec ce moniteur le même jour et pour le même type de permis","Dejà inscrit",JOptionPane.WARNING_MESSAGE);
            }
                
            
            else if(ctrlMoniteur.trouverLicenceMoniteur(ctrlMoniteur.getIdMoniteurByName(cboEleveInscriptionLeconMoniteur.getSelectedItem().toString()), ctrlVehicule.getCodeCateByModele(cboEleveInscriptionLeconVehicule.getSelectedItem().toString()) ) ){
            ctrlLecon.AjouterLecon(dateLecon, heureRdv, ctrlMoniteur.getIdMoniteurByName(cboEleveInscriptionLeconMoniteur.getSelectedItem().toString()), numEleve, ctrlVehicule.getImmatriculationByModele(cboEleveInscriptionLeconVehicule.getSelectedItem().toString()), reglee);
            JOptionPane.showMessageDialog(this, "Vous avez été inscrit à la leçon");
            }
            else{
                JOptionPane.showMessageDialog(this, "Le moniteur ne possède pas la licence pour passer ce permis","Choix du permis",JOptionPane.WARNING_MESSAGE);
            }
                    }
        
        
        
    }//GEN-LAST:event_btnEleveInscriptionLeconMouseClicked

    private void cboEleveInscriptionLeconTypePermisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEleveInscriptionLeconTypePermisActionPerformed
        // Affiche les véhicules d'une catégorie
         cboEleveInscriptionLeconVehicule.removeAllItems();
        for(Vehicule vehicule : ctrlVehicule.getAllVehiculeByCateg(ctrlCategorie.getIdCategorie(cboEleveInscriptionLeconTypePermis.getSelectedItem().toString()))){    
            cboEleveInscriptionLeconVehicule.addItem(vehicule.getModele());
        }
        
    }//GEN-LAST:event_cboEleveInscriptionLeconTypePermisActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEleveInscriptionLecon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEleveInscriptionLecon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEleveInscriptionLecon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEleveInscriptionLecon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmEleveInscriptionLecon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEleveInscriptionLecon;
    private javax.swing.JComboBox<String> cboEleveInscriptionLeconMoniteur;
    private javax.swing.JComboBox<String> cboEleveInscriptionLeconTypePermis;
    private javax.swing.JComboBox<String> cboEleveInscriptionLeconVehicule;
    private javax.swing.JComboBox<String> cboPayee;
    private com.toedter.calendar.JDateChooser dcEleveInscriptionLeconDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblLEleveLeconDate;
    private javax.swing.JLabel lblLEleveLeconH;
    private javax.swing.JLabel lblLEleveLeconHeure;
    private javax.swing.JLabel lblLEleveLeconMinute;
    private javax.swing.JLabel lblLEleveLeconMoniteur;
    private javax.swing.JLabel lblLEleveLeconTitre;
    private javax.swing.JLabel lblLEleveLeconTypePermis;
    private javax.swing.JLabel lblLEleveLeconVehicule;
    private javax.swing.JSpinner spEleveInscriptionLeconHeure;
    private javax.swing.JSpinner spEleveInscriptionLeconMinute;
    // End of variables declaration//GEN-END:variables
}
